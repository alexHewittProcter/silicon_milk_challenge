{"ast":null,"code":"var _jsxFileName = \"/Users/AlexProcter/Dropbox/WorkProjects/silicon_milk_challenge/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ApplicantCard from './ApplicantCard';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      applicants: []\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('/api/users').then(data => data.json()).catch(err => console.log(err)).then(data => this.setState({\n      applicants: data\n    }));\n  }\n\n  render() {\n    console.log(this.state.applicants);\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.applicants.map((data, index) => React.createElement(ApplicantCard, {\n      key: index,\n      applicant: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/AlexProcter/Dropbox/WorkProjects/silicon_milk_challenge/client/src/App.js"],"names":["React","Component","ApplicantCard","App","state","applicants","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","post","text","setState","responseToPost","componentDidMount","then","data","json","catch","err","console","log","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,UAAU,EAAE;AADN,KADkB;;AAAA,SAc1BC,YAd0B,GAcX,MAAMC,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AACzCC,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgC;AAKzCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWY;AAAnB,SAAf;AALmC,OAAf,CAA5B;AAOA,YAAMH,IAAI,GAAG,MAAMJ,QAAQ,CAACQ,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAEN;AAAlB,OAAd;AACD,KA1ByB;AAAA;;AAK1BO,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,KAAK,CAAC,YAAD,CAAL,CACGW,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB,EAGGJ,IAHH,CAGQC,IAAI,IAAI,KAAKJ,QAAL,CAAc;AAACb,MAAAA,UAAU,EAACiB;AAAZ,KAAd,CAHhB;AAID;;AAkBHM,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWC,UAAvB;AACE,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWC,UAAX,CAAsBwB,GAAtB,CAA0B,CAACP,IAAD,EAAMQ,KAAN,KAAgB,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,KAApB;AAA2B,MAAA,SAAS,EAAER,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1C,CADH,CADF,CADF;AAOD;;AArCyB;;AAwC5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ApplicantCard from './ApplicantCard';\n\nclass App extends Component {\n  state = {\n    applicants :[]\n  };\n  \n  componentDidMount() {\n    fetch('/api/users')\n      .then(data => data.json())\n      .catch(err => console.log(err))\n      .then(data => this.setState({applicants:data}))\n  }\n  \n  handleStatusChange\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n  };\n  \nrender() {\n  console.log(this.state.applicants);\n    return (\n      <div className=\"App container\">\n        <div className='row'>\n          {this.state.applicants.map((data,index) => <ApplicantCard key={index} applicant={data}/>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}