{"ast":null,"code":"var _jsxFileName = \"/home/node/app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ApplicantCard from './ApplicantCard';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      applicants: []\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  getApplicants() {\n    fetch('/api/users').then(data => data.json()).catch(error => error).then(data => this.setState({\n      applicants: data\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.applicants.map(data => React.createElement(ApplicantCard, {\n      applicant: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/node/app/client/src/App.js"],"names":["React","Component","ApplicantCard","App","state","applicants","callApi","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","post","text","setState","responseToPost","componentDidMount","then","res","express","catch","err","console","log","getApplicants","data","error","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,UAAU,EAAG;AADP,KADkB;;AAAA,SAW1BC,OAX0B,GAWhB,YAAY;AACpB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7B,aAAOJ,IAAP;AACD,KAjByB;;AAAA,SAmB1BK,YAnB0B,GAmBX,MAAMC,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AACzCS,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgC;AAKzCT,QAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWiB;AAAnB,SAAf;AALmC,OAAf,CAA5B;AAOA,YAAMZ,IAAI,GAAG,MAAMF,QAAQ,CAACe,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAEf;AAAlB,OAAd;AACD,KA/ByB;AAAA;;AAK1BgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,OAAL,GACGoB,IADH,CACQC,GAAG,IAAI,KAAKJ,QAAL,CAAc;AAAEhB,MAAAA,QAAQ,EAAEoB,GAAG,CAACC;AAAhB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD;;AAuBDG,EAAAA,aAAa,GAAG;AACdzB,IAAAA,KAAK,CAAC,YAAD,CAAL,CACGkB,IADH,CACQQ,IAAI,IAAIA,IAAI,CAACxB,IAAL,EADhB,EAEGmB,KAFH,CAESM,KAAK,IAAIA,KAFlB,EAGGT,IAHH,CAGQQ,IAAI,IAAI,KAAKX,QAAL,CAAc;AAAClB,MAAAA,UAAU,EAAC6B;AAAZ,KAAd,CAHhB;AAID;;AACHE,EAAAA,MAAM,GAAG;AACL,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhC,KAAL,CAAWC,UAAX,CAAsBgC,GAAtB,CAA0BH,IAAI,IAAI,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,CADH,CADF,CADF;AAOD;;AA9CyB;;AAiD5B,eAAe/B,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport logo from './logo.svg';\n\nimport './App.css';\nimport ApplicantCard from './ApplicantCard';\n\nclass App extends Component {\n  state = {\n    applicants : []\n  };\n  \n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n  \n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  };\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n  };\n  getApplicants() {\n    fetch('/api/users')\n      .then(data => data.json())\n      .catch(error => error)\n      .then(data => this.setState({applicants:data}));\n  }\nrender() {\n    return (\n      <div className='App container'>\n        <div className='row'>\n          {this.state.applicants.map(data => <ApplicantCard applicant={data} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}