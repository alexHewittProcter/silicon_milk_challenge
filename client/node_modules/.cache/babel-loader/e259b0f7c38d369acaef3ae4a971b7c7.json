{"ast":null,"code":"var _jsxFileName = \"/Users/AlexProcter/Dropbox/WorkProjects/silicon_milk_challenge/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ApplicantCard from './ApplicantCard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applicants: []\n    };\n    this.getUsers = this.getUsers.bind(this);\n    this.handleStatusChange = this.handleStatusChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getUsers() {\n    fetch('/api/users').then(data => data.json()).catch(err => console.log(err)).then(data => this.setState({\n      applicants: data\n    }));\n  }\n\n  handleStatusChange(id, newStatus) {\n    console.log(applicants.map(data => {\n      if (data.applicantId === id) {\n        data.applicantStatus = newStatus;\n      }\n\n      return data;\n    }));\n    this.setState((state, props) => {\n      applicants: state.applicants.map(data => {\n        if (data.applicantId === id) {\n          data.applicantStatus = newStatus;\n        }\n\n        return data;\n      });\n    });\n    fetch('/api/user/status', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        post: {\n          id: id,\n          status: newStatus\n        }\n      })\n    });\n  }\n\n  render() {\n    console.log(this.state.applicants);\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.applicants.map((data, index) => React.createElement(ApplicantCard, {\n      key: index,\n      applicant: data,\n      handleStatusChange: this.handleStatusChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/AlexProcter/Dropbox/WorkProjects/silicon_milk_challenge/client/src/App.js"],"names":["React","Component","ApplicantCard","App","constructor","props","state","applicants","getUsers","bind","handleStatusChange","componentDidMount","fetch","then","data","json","catch","err","console","log","setState","id","newStatus","map","applicantId","applicantStatus","method","headers","body","JSON","stringify","post","status","render","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAGDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,QAAL;AACD;;AAEDA,EAAAA,QAAQ,GAAG;AACTI,IAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB,EAGGJ,IAHH,CAGQC,IAAI,IAAI,KAAKM,QAAL,CAAc;AAACb,MAAAA,UAAU,EAACO;AAAZ,KAAd,CAHhB;AAID;;AAEDJ,EAAAA,kBAAkB,CAACW,EAAD,EAAIC,SAAJ,EAAe;AAC/BJ,IAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAU,CAACgB,GAAX,CAAeT,IAAI,IAAI;AACjC,UAAGA,IAAI,CAACU,WAAL,KAAqBH,EAAxB,EAA4B;AAC1BP,QAAAA,IAAI,CAACW,eAAL,GAAuBH,SAAvB;AACD;;AACD,aAAOR,IAAP;AACD,KALW,CAAZ;AAMA,SAAKM,QAAL,CAAc,CAACd,KAAD,EAAOD,KAAP,KAAiB;AAC7BE,MAAAA,UAAU,EAACD,KAAK,CAACC,UAAN,CAAiBgB,GAAjB,CAAqBT,IAAI,IAAI;AACtC,YAAGA,IAAI,CAACU,WAAL,KAAqBH,EAAxB,EAA4B;AAC1BP,UAAAA,IAAI,CAACW,eAAL,GAAuBH,SAAvB;AACD;;AACD,eAAOR,IAAP;AACD,OALU;AAMZ,KAPD;AAQAF,IAAAA,KAAK,CAAC,kBAAD,EAAoB;AACvBc,MAAAA,MAAM,EAAC,MADgB;AAEvBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFc;AAKvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,IAAI,EAAC;AAAEV,UAAAA,EAAE,EAAEA,EAAN;AAASW,UAAAA,MAAM,EAACV;AAAhB;AAAN,OAAf;AALiB,KAApB,CAAL;AAQD;;AAEHW,EAAAA,MAAM,GAAG;AACPf,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,UAAvB;AACE,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWC,UAAX,CAAsBgB,GAAtB,CAA0B,CAACT,IAAD,EAAMoB,KAAN,KAAgB,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,KAApB;AAA2B,MAAA,SAAS,EAAEpB,IAAtC;AAA4C,MAAA,kBAAkB,EAAE,KAAKJ,kBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1C,CADH,CADF,CADF;AAOD;;AAxDyB;;AA2D5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ApplicantCard from './ApplicantCard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applicants :[]\n    };\n    this.getUsers = this.getUsers.bind(this);\n    this.handleStatusChange = this.handleStatusChange.bind(this);\n  }\n\n  \n  componentDidMount() {\n    this.getUsers();\n  }\n  \n  getUsers() {\n    fetch('/api/users')\n      .then(data => data.json())\n      .catch(err => console.log(err))\n      .then(data => this.setState({applicants:data}));\n  }\n\n  handleStatusChange(id,newStatus) {\n    console.log(applicants.map(data => {\n      if(data.applicantId === id) {\n        data.applicantStatus = newStatus;\n      }\n      return data;\n    }))\n    this.setState((state,props) => {\n      applicants:state.applicants.map(data => {\n        if(data.applicantId === id) {\n          data.applicantStatus = newStatus;\n        }\n        return data;\n      })\n    });\n    fetch('/api/user/status',{\n      method:'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({post:{ id: id,status:newStatus }})\n    })\n\n  }\n  \nrender() {\n  console.log(this.state.applicants);\n    return (\n      <div className=\"App container\">\n        <div className='row'>\n          {this.state.applicants.map((data,index) => <ApplicantCard key={index} applicant={data} handleStatusChange={this.handleStatusChange}/>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}