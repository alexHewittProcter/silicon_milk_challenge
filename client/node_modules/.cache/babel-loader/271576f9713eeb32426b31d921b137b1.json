{"ast":null,"code":"var _jsxFileName = \"/Users/AlexProcter/Dropbox/WorkProjects/silicon_milk_challenge/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ApplicantCard from './ApplicantCard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applicants: []\n    };\n    this.handleStatusChange = this.handleStatusChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/api/users').then(data => data.json()).catch(err => console.log(err)).then(data => this.setState({\n      applicants: data\n    }));\n  }\n\n  handleStatusChange(id, newStatus) {\n    console.log(\"DONE\");\n    alert('CALLEDD');\n    fetch('/api/user/status', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id,\n        status: newStatus\n      })\n    });\n  }\n\n  render() {\n    console.log(this.state.applicants);\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.applicants.map((data, index) => React.createElement(ApplicantCard, {\n      key: index,\n      applicant: data,\n      handleStatusChange: this.handleStatusChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/AlexProcter/Dropbox/WorkProjects/silicon_milk_challenge/client/src/App.js"],"names":["React","Component","ApplicantCard","App","constructor","props","state","applicants","handleStatusChange","bind","componentDidMount","fetch","then","data","json","catch","err","console","log","setState","id","newStatus","alert","method","headers","body","JSON","stringify","status","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAGDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB,EAGGJ,IAHH,CAGQC,IAAI,IAAI,KAAKM,QAAL,CAAc;AAACZ,MAAAA,UAAU,EAACM;AAAZ,KAAd,CAHhB;AAID;;AAEDL,EAAAA,kBAAkB,CAACY,EAAD,EAAIC,SAAJ,EAAe;AAC/BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAI,IAAAA,KAAK,CAAC,SAAD,CAAL;AACAX,IAAAA,KAAK,CAAC,kBAAD,EAAoB;AACvBY,MAAAA,MAAM,EAAC,MADgB;AAEvBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFc;AAKvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,QAAAA,EAAE,EAAEA,EAAN;AAASQ,QAAAA,MAAM,EAACP;AAAhB,OAAf;AALiB,KAApB,CAAL;AAQD;;AAEHQ,EAAAA,MAAM,GAAG;AACPZ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,UAAvB;AACE,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWC,UAAX,CAAsBuB,GAAtB,CAA0B,CAACjB,IAAD,EAAMkB,KAAN,KAAgB,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,KAApB;AAA2B,MAAA,SAAS,EAAElB,IAAtC;AAA4C,MAAA,kBAAkB,EAAE,KAAKL,kBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1C,CADH,CADF,CADF;AAOD;;AAvCyB;;AA0C5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ApplicantCard from './ApplicantCard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applicants :[]\n    };\n    this.handleStatusChange = this.handleStatusChange.bind(this);\n  }\n\n  \n  componentDidMount() {\n    fetch('/api/users')\n      .then(data => data.json())\n      .catch(err => console.log(err))\n      .then(data => this.setState({applicants:data}))\n  }\n  \n  handleStatusChange(id,newStatus) {\n    console.log(\"DONE\");\n    alert('CALLEDD')\n    fetch('/api/user/status',{\n      method:'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ id: id,status:newStatus })\n    })\n\n  }\n  \nrender() {\n  console.log(this.state.applicants);\n    return (\n      <div className=\"App container\">\n        <div className='row'>\n          {this.state.applicants.map((data,index) => <ApplicantCard key={index} applicant={data} handleStatusChange={this.handleStatusChange}/>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}